// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  first_name String
  image_url  String?
  last_name  String
  address    String?
  active     Boolean    @default(true)
  phone      String?
  roles      Role[]     @relation("UserRoles")
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  UserRole   UserRole[]
  Loan       Loan[]
}

model Role {
  id         Int        @id @default(autoincrement())
  role_name  RoleEnum   @unique @default(ROLE_USER)
  users      User[]     @relation("UserRoles")
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  UserRole   UserRole[]
}

model UserRole {
  user    User   @relation(fields: [user_id], references: [id])
  user_id String
  role    Role   @relation(fields: [role_id], references: [id])
  role_id Int

  @@id([user_id, role_id])
}

// --------------------------------------------------------------

enum RoleEnum {
  ROLE_ADMIN
  ROLE_SECRETARY
  ROLE_USER
}

// --------------------------------------------------------------

model Loan {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  // resources
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Resource {
  id                String             @id @default(cuid())
  resource_name     String
  slug_name         String?            @unique @default(cuid())
  image_url         String?
  author            String
  short_description String?
  edition           String
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
  // Relations
  type              ResourceType       @relation(fields: [type_id], references: [id])
  type_id           Int
  instances         ResourceInstance[]
  categories        Category[]         @relation("ResourceCategory")
  ResourceCategory  ResourceCategory[]
  publisher         Publisher          @relation(fields: [publisher_id], references: [id])
  publisher_id      Int
  detail            ResourceDetail?    @relation(fields: [detail_id], references: [id])
  detail_id         Int?               @unique
}

model ResourceDetail {
  id          Int       @id @default(autoincrement())
  pub_year    Int
  isbn        String?
  description Json
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  // Relations
  resource    Resource?
}

model ResourceInstance {
  id            String                 @id @default(cuid())
  instance_name String                 @default("Unknown")
  resource      Resource               @relation(fields: [resource_id], references: [id])
  resource_id   String
  lang          ResourceLang           @default(LANG_EN)
  // loan Loan[]
  status        ResourceInstanceStatus @default(GOOD)
  created_at    DateTime               @default(now())
  updated_at    DateTime               @updatedAt
}

model ResourceType {
  id                 Int           @id @default(autoincrement())
  resource_type_name ResourceTypes @unique @default(BOOK)
  max_loan_days      Int           @default(7)
  max_units_per_loan Int           @default(3)
  Resource           Resource[]
}

enum ResourceTypes {
  BOOK
  MAGAZINE
  DVD
  COMICS
  ENCYCLOPEDIA
  DICTIONARY
  ARTICLE
  REPORT
  RESEARCH_PAPER
  EDUCATIONAL
}

enum ResourceInstanceStatus {
  GOOD
  POOR
  DAMAGED
  LOST
  ARCHIVED
}

// --------------------------------------------------------------

model Publisher {
  id             Int        @id @default(autoincrement())
  publisher_name String     @unique
  resources      Resource[]
  image_url      String?
  url            String?
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
}

model Category {
  id               Int                @id @default(autoincrement())
  category_name    String             @unique
  resources        Resource[]         @relation("ResourceCategory")
  ResourceCategory ResourceCategory[]
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
}

model ResourceCategory {
  resource    Resource @relation(fields: [resource_id], references: [id])
  resource_id String
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int

  @@id([resource_id, category_id])
}

enum ResourceLang {
  LANG_EN // English
  LANG_ES // Spanish
  LANG_FR // French
  LANG_DE // German
  LANG_HI // Hindi
  LANG_RU // Russian
  LANG_JA // Japanese
  LANG_ZH // Chinese
  LANG_PT // Portuguese
  LANG_AR // Arabic
  LANG_OTHER // Other
}
